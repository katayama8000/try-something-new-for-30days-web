import { Button, Group } from '@mantine/core';
import * as sentry from '@sentry/nextjs';
import axios from 'axios';
import type { NextPage } from 'next';
import Head from 'next/head';
import Link from 'next/link';
import { useState } from 'react';

import { auth } from '../../libs/firebase';

const Home: NextPage = () => {
  const [uid, setUid] = useState<string>('');
  const [idToken, setIdToken] = useState<string>('');

  const handleSetCustomClaim = async () => {
    const response = await axios.post<{ uid: string }>('/api/setCustomClaim', {
      uid,
    });
    console.log(response);
  };

  const handleVerifyIdToken = async () => {
    console.log(idToken);
    const response = await axios.post<{ uid: string }>('/api/verifyIdToken', {
      idToken,
    });
    console.log(response);
  };

  const handleGetUserId = async () => {
    if (!auth.currentUser) return;
    const uid = auth.currentUser.uid;
    console.log(uid);
    setUid(uid);
    const idToken = await auth.currentUser.getIdToken();
    console.log(idToken);
    setIdToken(idToken);
  };

  const handleGetUserInfo = async () => {
    const user = auth.currentUser;
    if (!user) return;
    console.log(user);
    const token = await user.getIdToken();
    console.log(token);
  };

  const handleCheckCustomClaims = async () => {
    if (!auth.currentUser) return;
    // 伝搬
    await auth.currentUser.getIdToken(true);
    console.log(idToken);
    // await auth.currentUser.reload();
    const idTokenResult = await auth.currentUser.getIdTokenResult();
    console.log(idTokenResult.claims);
  };

  const handleGetUserIdToken = async () => {
    if (!auth.currentUser) return;
    const token = await auth.currentUser.getIdToken();
    console.log(token);
    setIdToken(token);
  };

  const handleLogout = async () => {
    await auth.signOut();
  };

  const handleThrowSentryError = () => {
    sentry.captureException(new Error('error occured in client side'));
  };

  const handleThrowError = () => {
    throw new Error('error!!!!!!');
  };

  const addPremium = async () => {
    if (!auth.currentUser) return;
    const uid = auth.currentUser.uid;
    const response = await axios.post<{ uid: string }>('/api/setCustomClaim', {
      kind: 'premium',
      uid: uid,
    });
    console.log(response);
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        {/* <link rel="icon" href="/favicon.ico" /> */}
      </Head>
      <main>
        <Group mt={50} position='center'>
          <Button onClick={handleThrowSentryError} color={'red'}>
            throw sentry error
          </Button>
          <Button onClick={handleThrowError} color={'red'}>
            throw error
          </Button>
          <Button onClick={handleSetCustomClaim}>setCustomClaim</Button>
          <Button onClick={handleVerifyIdToken}>verifyIdToken</Button>
          <Button onClick={handleGetUserId}>getUserId</Button>
          <Button onClick={handleGetUserIdToken}>getUserIdToken</Button>
          <Button onClick={handleGetUserInfo}>getUserInfo</Button>
          <Button onClick={handleCheckCustomClaims}>checkCustomClaims</Button>
          <Button onClick={addPremium}>プレミアムアカウント権限</Button>
          <Link href={'sign-in'}>signIn</Link>
          <Link href={'admin'}>admin</Link>
          <Button onClick={handleLogout}>logout</Button>
        </Group>
      </main>
    </>
  );
};

export default Home;
